<?php

namespace AppBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * EtablissementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
use MongoDate as MongoDate;

class PassageRepository extends DocumentRepository {

    public function findAllByPeriodeAndIdentifiantTechnicien($startDate, $endDate, $identifiantTech) {
        $mongoStartDate = new MongoDate(strtotime($startDate));
        $mongoEndDate = new MongoDate(strtotime($endDate));
        $query = $this->createQueryBuilder('Passage')
                ->field('dateDebut')->gte($mongoStartDate)
                ->field('dateDebut')->lte($mongoEndDate)
                ->getQuery();
        return$query->execute();
    }

    public function findOneByIdentifiantEtablissementAndIdentifiantPassage($identifiantEtb, $identifiantPassage) {

        return $this->findOneBy(
                        array('id' => 'PASSAGE-' . $identifiantEtb . '-' . $identifiantPassage));
    }

    public function findByEtablissementAndCreateAt($etablissementIdentifiant, $createAt) {
        return $this->findBy(
                        array('etablissementIdentifiant' => $etablissementIdentifiant, 'createAt' => $createAt));
    }

    public function findPassagesForEtablissementsAndDay($etablissementIdentifiant, $date) {

        $passagesByEtablissementAndCreationDate = $this->findByEtablissementAndCreateAt($etablissementIdentifiant, $date);

        $allPassagesNumeros = array();
        if (count($passagesByEtablissementAndCreationDate)) {
            foreach ($passagesByEtablissementAndCreationDate as $passageByEtablissementAndCreationDate) {
                $allPassagesNumeros[$passageByEtablissementAndCreationDate->getNumeroPassageIdentifiant()] = $passageByEtablissementAndCreationDate->getNumeroPassageIdentifiant();
            }
        }
        return $allPassagesNumeros;
    }

    public function findPassagesForEtablissement($etablissementIdentifiant) {

        return $this->findBy(array('etablissementIdentifiant' => $etablissementIdentifiant));
    }

    public function findToPlan() {
        $query = $this->createQueryBuilder('Passage')
                      ->field('dateDebut')->exists(false)
                      ->sort('dateCreation', 'asc')
                      ->getQuery();

        return $query->execute();
    } 

}
